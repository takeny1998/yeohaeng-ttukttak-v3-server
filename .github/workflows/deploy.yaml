name: Deploy to Remote Server

on:
  push:
    branches:
      - main

env:
  CONTAINER_NAME: yeohaeng-ttukttak-v3-server

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: 23
          distribution: corretto

      - name: Execute Gradle build and push
        run: |
          ./gradlew bootBuildImage \
            -Pdocker_id=${{ secrets.DOCKER_USERNAME }} \
            -Pdocker_pw=${{ secrets.DOCKER_PASSWORD }}

      - name: Deploy on remote server
        uses: appleboy/ssh-action@master
        env:
          IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/${{ env.CONTAINER_NAME }}:latest
        with:
          host: ${{ secrets.REMOTE_SERVER_HOST }}
          username: ${{ secrets.REMOTE_SERVER_USERNAME }}
          password: ${{ secrets.REMOTE_SERVER_PASSWORD }}
          port: ${{ secrets.REMOTE_SERVER_PORT }}
          script: |
            # Check if the container is running
            if [ "$(docker ps -q -f name=${{ env.CONTAINER_NAME }})" ]; then
              echo "Stopping and removing existing container..."
              docker stop ${{ env.CONTAINER_NAME }} || { echo 'Failed to stop container'; exit 1; }
              docker rm ${{ env.CONTAINER_NAME }} || { echo 'Failed to remove container'; exit 1; }
            fi

            # Pull the latest image
            echo "Pulling the latest image..."
            docker pull ${{ env.IMAGE_NAME }} || { echo 'Failed to pull image'; exit 1; }

            # Run the new container
            echo "Running the new container..."
            docker run -d \
              --name ${{ env.CONTAINER_NAME }} \
              -p 8080:8080 \
              ${{ env.IMAGE_NAME }} || { echo 'Failed to run container'; exit 1; }

            # Cleanup old images (optional)
            echo "Cleaning up old images..."
            docker image prune -f || { echo 'Failed to prune old images'; exit 1; }