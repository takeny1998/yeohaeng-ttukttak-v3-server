plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.yeohaeng-ttukttak'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	/** Database Dependency **/
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.flywaydb:flyway-mysql'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	runtimeOnly 'com.h2database:h2'
}

tasks.named('test') {
	useJUnitPlatform()
}


bootBuildImage {
	String dockerId = project.findProperty('docker_id')
	String dockerPw = project.findProperty('docker_pw')

	// 이미지 이름을 구성합니다.
	imageName = "${dockerId}/${project.name}"
	publish = true

	imagePlatform.set("linux/amd64")

	docker {

		publishRegistry {
			username = dockerId
			password = dockerPw
		}
	}
}